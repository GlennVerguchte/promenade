- hosts: all
  tasks:
    - include_vars: vars.yaml

    - name: Install Docker (Debian)
      when: ansible_os_family == 'Debian'
      block:
        - file:
            path: "{{ item }}"
            state: directory
          with_items:
            - /etc/docker/
            - /etc/systemd/system/docker.service.d/
            - /var/lib/docker/
        - mount:
            path: /var/lib/docker/
            src: tmpfs
            fstype: tmpfs
            opts: size=25g
            state: mounted
        - copy: "{{ item }}"
          with_items:
            - content: "{{ docker_daemon | to_json }}"
              dest: /etc/docker/daemon.json
            - src: files/docker-systemd.conf
              dest: /etc/systemd/system/docker.service.d/
        - apt_key:
            url: https://download.docker.com/linux/ubuntu/gpg
        - apt_repository:
            repo: deb http://{{ zuul_site_mirror_fqdn }}/deb-docker xenial stable
        - apt:
            name: "{{ item }}"
            allow_unauthenticated: True
          with_items:
            - docker-ce
            - python-pip
        - pip:
            name: docker
            version: 2.7.0
        # NOTE(SamYaple): Allow all connections from containers to host so the
        # containers can access the http server for git and wheels
        - iptables:
            action: insert
            chain: INPUT
            in_interface: docker0
            jump: ACCEPT
      become: True

    - name: Debug tag generation inputs
      block:
        - debug:
            var: publish
        - debug:
            var: tags
        - debug:
            var: zuul
        - debug:
            msg: "{{ tags | to_json }}"

    - name: Determine tags
      shell: echo '{{ tags | to_json }}' | python {{ zuul.project.src_dir }}/tools/image_tags.py
      environment:
        BRANCH: "{{ zuul.branch }}"
        CHANGE: "{{ zuul.change }}"
        COMMIT: "{{ zuul.newrev }}"
        PATCHSET: "{{ zuul.patchset }}"
      register: image_tags

    - name: Debug computed tags
      debug:
        var: image_tags

    - name: Docker login
      docker_login:
        password: "{{ airship_promenade_quay_creds.password }}"
        username: "{{ airship_promenade_quay_creds.username }}"
        registry_url: "https://quay.io/api/v1/"

      become: True
      when: publish

    - name: Build (and push) images
      block:
        - docker_image:
            name: "quay.io/airshipit/promenade"
            dockerfile: "Dockerfile"
            path: "{{ zuul.project.src_dir }}"
            pull: false
            push: "{{ publish }}"
            tag: "{{ item }}"
          with_items: "{{ image_tags.stdout_lines }}"

        - shell: "docker images"
          register: docker_images

        - debug:
            var: docker_images

      become: True
